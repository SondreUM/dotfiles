# commands from https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium
customCommands:
  - key: "<c-P>"
    description: "Push to a specific remote repository"
    context: "global"
    loadingText: "Pushing ..."
    prompts:
      - type: "menuFromCommand"
        title: "Which remote repository to push to?"
        command: bash -c "git remote --verbose | grep '/.* (push)'"
        filter: '(?P<remote>.*)\s+(?P<url>.*) \(push\)'
        valueFormat: "{{ .remote }}"
        labelFormat: "{{ .remote | bold | cyan }} {{ .url }}"
      - type: "menu"
        title: "How to push?"
        options:
          - value: "push"
          - value: "push --force-with-lease"
          - value: "push --force"
    command: "git {{index .PromptResponses 1}} {{index .PromptResponses 0}}"
  - key: "<c-P>"
    description: "Push to a specific remote repository"
    context: "global"
    loadingText: "Pushing ..."
    prompts:
      - type: "menuFromCommand"
        title: "Which remote repository to push to?"
        command: bash -c "git remote --verbose | grep '/.* (push)'"
        filter: '(?P<remote>.*)\s+(?P<url>.*) \(push\)'
        valueFormat: "{{ .remote }}"
        labelFormat: "{{ .remote | bold | cyan }} {{ .url }}"
      - type: "menu"
        title: "How to push?"
        options:
          - value: "push"
          - value: "push --force-with-lease"
          - value: "push --force"
    command: "git {{index .PromptResponses 1}} {{index .PromptResponses 0}}"
  - key: "P"
    command: "git push {{.SelectedRemote.Name}} {{.SelectedLocalCommit.Sha}}:{{.SelectedLocalBranch.RefName}}"
    context: "commits"
    loadingText: "Pushing commit..."
    description: "Push a specific commit (and any preceding)"
    stream: yes
  - key: "v"
    context: "localBranches"
    loadingText: "Checking out GitHub Pull Request..."
    command: "gh pr checkout {{.Form.PullRequestNumber}}"
    prompts:
      - type: "menuFromCommand"
        title: "Which PR do you want to check out?"
        key: "PullRequestNumber"
        command: >-
          gh pr list --json number,title,headRefName,updatedAt
          --template '{{`{{range .}}{{printf "#%v: %s - %s (%s)" .number .title .headRefName (timeago .updatedAt)}}{{end}}`}}'
        filter: "#(?P<number>[0-9]+): (?P<title>.+) - (?P<ref_name>[^ ]+).*"
        valueFormat: "{{.number}}"
        labelFormat: '{{"#" | black | bold}}{{.number | white | bold}} {{.title | yellow | bold}}{{" [" | black | bold}}{{.ref_name | green}}{{"]" | black | bold}}'
  - key: "C"
    command: "git cz c"
    description: "commit with commitizen"
    context: "files"
    loadingText: "opening commitizen commit tool"
    subprocess: true
  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "localBranches"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning gone..."
  - key: "<c-f>"
    description: "fetch a remote branch as a new local branch"
    command: "git fetch {{index .SelectedRemote.Name }} {{index .PromptResponses 0}}:{{index .PromptResponses 1}}"
    context: "remotes"
    prompts:
      - type: "input"
        title: "Remote Branch Name"
        initialValue: ""
      - type: "input"
        title: "New Local Branch Name"
        initialValue: ""
    loadingText: "fetching branch"
  # retrieved from: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
  - command: git commit -m '{{ .Form.emoji }} {{ .Form.message }}'
    context: files
    description: Commit changes using gitmojis
    key: C
    prompts:
      - command: gitmoji -l
        filter: ^(.*?) - (:.*?:) - (.*)$
        key: emoji
        labelFormat: "{{ .group_1 }} - {{ .group_3 }}"
        title: "Select a gitmoji:"
        type: menuFromCommand
        valueFormat: "{{ .group_2 }}"
      - key: message
        title: "Enter a commit message:"
        type: input
